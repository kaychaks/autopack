name: "Create Artefacts"
on:
  push:
    tags:
      - "0.[0-9]+.[0-9]+"

jobs:
  create-release:
    name: create-release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
    steps:
      - name: Create GitHub release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.ref_name }}
          release_name: v${{ github.ref_name }}

  build-release:
    needs: ['create-release']
    strategy:
      fail-fast: false
      matrix:
        rust_version: [stable]
        platform:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            npm_package_suffix: linux
          - target: x86_64-apple-darwin
            os: macos-latest
            npm_package_suffix: darwin
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            npm_package_suffix: win

    runs-on: ${{ matrix.platform.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust Stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust_version }}

      - name: Build
        uses: actions-rs/cargo@v1.0.3
        with:
          command: build
          args: --release --locked --target ${{ matrix.platform.target }}

      - name: Copy Artefacts | unix
        if: matrix.platform.os != 'windows-latest'
        shell: bash
        run: |
          staging="auto-pack-v${{ github.ref_name }}-${{ matrix.platform.target }}"
          mkdir -p "$staging"
          strip "target/${{ matrix.platform.target }}/release/auto-pack" || true
          cp "target/${{ matrix.platform.target }}/release/auto-pack" "$staging/"
          tar czf "$staging.tar.gz" "$staging"
          echo "ASSET=$staging.tar.gz" >> $GITHUB_ENV
       

      - name: Copy Artefacts | windows
        if: matrix.platform.os == 'windows-latest'
        shell: bash
        run: |
          staging="auto-pack-v${{ github.ref_name }}-${{ matrix.platform.target }}"
          mkdir -p "$staging"
          strip "target/${{ matrix.platform.target }}/release/auto-pack.exe"
          cp "target/${{ matrix.platform.target }}/release/auto-pack.exe" "$staging/"
          7z a "$staging.zip" "$staging"
          echo "ASSET=$staging.zip" >> $GITHUB_ENV

      - name: Upload release archive
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ env.ASSET }}
          asset_name: ${{ env.ASSET }}
          asset_content_type: application/octet-stream
  
